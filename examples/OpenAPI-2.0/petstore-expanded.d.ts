/* tslint:disable */
/*--------------------------------------------------------------------------------------------

*  This is an declarationsOnly mode example output of schema2ts
*  Original input is: https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/examples/v2.0/json/petstore-expanded.json
*
*  Generated by:
* 	    schema2ts 0.5.0-beta.3
* 	    Typescript ^2.6.0
*
*  See syntax error in this file?
*       We are working for these features that will break schema2ts, thanks for your waiting
*--------------------------------------------------------------------------------------------*/
import { AxiosInstance } from "axios";
export interface _Response<Status, Data> {
    data: Data;
    status: Status;
    statusText: string;
    headers: any;
    request?: any;
}
export declare const _: {
    lib: AxiosInstance;
    removeEmpty(obj: any): any;
    getPathParam(url: string, params: any): string;
    request(url: string, method: string, {query, body, path, headers, bodyType}: {
        query?: any;
        body?: any;
        path?: any;
        headers?: any;
        bodyType?: "json" | "form";
    }): Promise<{
        data: any;
        headers: any;
        request: any;
        status: any;
        statusText: string;
    }>;
};
export declare var findPets_url: string;
export declare var findPets_method: string;
export declare var addPet_url: string;
export declare var addPet_method: string;
export declare var find_pet_by_id_url: string;
export declare var find_pet_by_id_method: string;
export declare var deletePet_url: string;
export declare var deletePet_method: string;
export declare type findPets_parameter_query = {
    "tags": string[];
    "limit": number;
};
export declare type findPets_result_200 = ({
    "name": string;
    "tag"?: string;
})[];
export declare type findPets_result_default = {
    "code": number;
    "message": string;
};
/** Returns all pets from the system that the user has access to
Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.

Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.
 */
export declare function findPets_invoke(query: findPets_parameter_query): Promise<_Response<200, ({
    "name": string;
    "tag"?: string;
})[]> | _Response<"default", {
    "code": number;
    "message": string;
}>>;
export declare type addPet_parameter_body = {
    "name": string;
    "tag"?: string;
};
export declare type addPet_result_200 = {
    "name": string;
    "tag"?: string;
};
export declare type addPet_result_default = {
    "code": number;
    "message": string;
};
/** Creates a new pet in the store.  Duplicates are allowed */
export declare function addPet_invoke(body: addPet_parameter_body): Promise<_Response<200, {
    "name": string;
    "tag"?: string;
}> | _Response<"default", {
    "code": number;
    "message": string;
}>>;
export declare type find_pet_by_id_parameter_path = {
    "id": number;
};
export declare type find_pet_by_id_result_200 = {
    "name": string;
    "tag"?: string;
};
export declare type find_pet_by_id_result_default = {
    "code": number;
    "message": string;
};
/** Returns a user based on a single ID, if the user does not have access to the pet */
export declare function find_pet_by_id_invoke(path: find_pet_by_id_parameter_path): Promise<_Response<200, {
    "name": string;
    "tag"?: string;
}> | _Response<"default", {
    "code": number;
    "message": string;
}>>;
export declare type deletePet_parameter_path = {
    "id": number;
};
export declare type deletePet_result_default = {
    "code": number;
    "message": string;
};
/** deletes a single pet based on the ID supplied */
export declare function deletePet_invoke(path: deletePet_parameter_path): Promise<_Response<"default", {
    "code": number;
    "message": string;
}>>;
